apply plugin: 'maven-publish'

def ARTIFACT_ID = "ali"
def VERSION_NAME = rootProject.ext.publish.version// 版本
def GROUP_ID = 'com.mhy.social'

//本地发布
//afterEvaluate {
//publishing {
//
//    // 定义发布什么
//    publications {
//        plugin(MavenPublication) {
//            from components.java //使用默认的配置生成jar包
//            groupId = 'com.sand.group'     //这三部分组成了：com.example:plugin:1.0.0-SNAPSHOT
//            artifactId = 'mt'
//            version = '1.0.0'
//        }
//    }
//    // 定义发布到哪
//    // publishPluginPublicationToRepoRepository 发布到 plugin/build/repo
//    // publishPluginPublicationToMavenLocal 发布到 ~/.m2/repository
//    repositories {
//        maven {
//            name = 'repo'
//            url = layout.buildDirectory.dir("repo")
//        }
//    }
//}
//}

//远程发布， 发布到我自己的私有库
afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                from components.release
//                artifact androidSourcesJar //打包源码，去除这行打的包将看不到源码
                groupId = GROUP_ID
                artifactId = ARTIFACT_ID
                version = VERSION_NAME
            }
        }
        repositories {
            maven {
                allowInsecureProtocol(true)
                name("artifactory")
                url = MAVEN_URL
                credentials {
                    username = MAVEN_USER
                    password = MAVEN_PASSWORD
                }
            }
        }
    }
}

// 用于打包源代码的任务
task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    //from android.sourceSets.main.java.sourceFiles //仅Java源码
    from android.sourceSets.main.java.srcDirs //包括Java和Kotlin源码和资源
}